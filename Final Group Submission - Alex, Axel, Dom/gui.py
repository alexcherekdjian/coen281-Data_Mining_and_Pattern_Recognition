#!/usr/bin/env python
# GUI program
import sys
import sklearn
from joblib import load
import pickle

# Dictionary to encode the airport codes
airport_decode = {'BMI': 0,
 'ORD': 1,
 'SGF': 2,
 'FWA': 3,
 'CMI': 4,
 'SYR': 5,
 'CVG': 6,
 'OKC': 7,
 'RIC': 8,
 'XNA': 9,
 'FAR': 10,
 'BDL': 11,
 'GRB': 12,
 'TYS': 13,
 'CLT': 14,
 'GRR': 15,
 'DSM': 16,
 'MDT': 17,
 'TRI': 18,
 'PIT': 19,
 'CMH': 20,
 'JFK': 21,
 'IND': 22,
 'AZO': 23,
 'MCI': 24,
 'DTW': 25,
 'BUF': 26,
 'MQT': 27,
 'ICT': 28,
 'BNA': 29,
 'EVV': 30,
 'CLE': 31,
 'BWI': 32,
 'ROC': 33,
 'DBQ': 34,
 'MEM': 35,
 'RDU': 36,
 'MHK': 37,
 'TUL': 38,
 'TVC': 39,
 'OMA': 40,
 'HSV': 41,
 'CWA': 42,
 'CHA': 43,
 'CHO': 44,
 'ART': 45,
 'ORF': 46,
 'ILM': 47,
 'LEX': 48,
 'MLI': 49,
 'LGA': 50,
 'DCA': 51,
 'MSP': 52,
 'ATL': 53,
 'SFO': 54,
 'BUR': 55,
 'PDX': 56,
 'ONT': 57,
 'SEA': 58,
 'LGB': 59,
 'SBA': 60,
 'PSC': 61,
 'BOI': 62,
 'LAX': 63,
 'DEN': 64,
 'MKE': 65,
 'SLC': 66,
 'BIS': 67,
 'BIL': 68,
 'ABQ': 69,
 'MSO': 70,
 'SMF': 71,
 'SBN': 72,
 'HDN': 73,
 'DFW': 74,
 'LNK': 75,
 'COS': 76,
 'PHX': 77,
 'IDA': 78,
 'RDM': 79,
 'PSP': 80,
 'SAN': 81,
 'LMT': 82,
 'RNO': 83,
 'HPN': 84,
 'OAK': 85,
 'DAY': 86,
 'SMX': 87,
 'LAS': 88,
 'FCA': 89,
 'ASE': 90,
 'AVL': 91,
 'SUN': 92,
 'IYK': 93,
 'MSN': 94,
 'LAN': 95,
 'RAP': 96,
 'IAD': 97,
 'IAH': 98,
 'FAT': 99,
 'ACV': 100,
 'EKO': 101,
 'GJT': 102,
 'SAT': 103,
 'MFR': 104,
 'EAU': 105,
 'PAH': 106,
 'CIC': 107,
 'BZN': 108,
 'MRY': 109,
 'GFK': 110,
 'MOT': 111,
 'GEG': 112,
 'TUS': 113,
 'EUG': 114,
 'SPI': 115,
 'MAF': 116,
 'CMX': 117,
 'DLH': 118,
 'ATW': 119,
 'OTH': 120,
 'HLN': 121,
 'DRO': 122,
 'YUM': 123,
 'SGU': 124,
 'JAC': 125,
 'SNA': 126,
 'MTJ': 127,
 'GUC': 128,
 'ELP': 129,
 'MSY': 130,
 'AUS': 131,
 'MKG': 132,
 'DAL': 133,
 'RKS': 134,
 'SBP': 135,
 'GTF': 136,
 'CPR': 137,
 'BFL': 138,
 'CEC': 139,
 'MBS': 140,
 'BTM': 141,
 'MMH': 142,
 'IPL': 143,
 'SJC': 144,
 'FSD': 145,
 'EGE': 146,
 'GCC': 147,
 'STL': 148,
 'LWS': 149,
 'LSE': 150,
 'MOD': 151,
 'BHM': 152,
 'RDD': 153,
 'CLD': 154,
 'CID': 155,
 'COD': 156,
 'CDC': 157,
 'PIH': 158,
 'TWF': 159,
 'GUM': 160,
 'HNL': 161,
 'TPA': 162,
 'PHL': 163,
 'MCO': 164,
 'EWR': 165,
 'BOS': 166,
 'SJU': 167,
 'KOA': 168,
 'MIA': 169,
 'LIH': 170,
 'ALB': 171,
 'OGG': 172,
 'PVD': 173,
 'PBI': 174,
 'FLL': 175,
 'ANC': 176,
 'RSW': 177,
 'BQN': 178,
 'ITO': 179,
 'STT': 180,
 'JAX': 181,
 'MYR': 182,
 'AEX': 183,
 'AMA': 184,
 'BRO': 185,
 'BTR': 186,
 'BTV': 187,
 'CHS': 188,
 'GSP': 189,
 'PWM': 190,
 'SDF': 191,
 'GPT': 192,
 'CRP': 193,
 'CRW': 194,
 'GSO': 195,
 'JAN': 196,
 'MHT': 197,
 'SAV': 198,
 'MFE': 199,
 'HOB': 200,
 'HRL': 201,
 'LBB': 202,
 'LFT': 203,
 'LRD': 204,
 'MLU': 205,
 'MOB': 206,
 'PNS': 207,
 'SHV': 208,
 'VPS': 209,
 'LIT': 210,
 'CAE': 211,
 'FAY': 212,
 'ECP': 213,
 'ABE': 214,
 'PHF': 215,
 'LWB': 216,
 'ELM': 217,
 'GTR': 218,
 'TLH': 219,
 'BQK': 220,
 'OAJ': 221,
 'DHN': 222,
 'AGS': 223,
 'MGM': 224,
 'GNV': 225,
 'ROA': 226,
 'CAK': 227,
 'EWN': 228,
 'FSM': 229,
 'AVP': 230,
 'CSG': 231,
 'SWF': 232,
 'VLD': 233,
 'BGR': 234,
 'ABY': 235,
 'MEI': 236,
 'EYW': 237,
 'PIA': 238,
 'MDW': 239,
 'HOU': 240,
 'RFD': 241,
 'ACY': 242,
 'BKG': 243,
 'FNT': 244,
 'SRQ': 245,
 'ROW': 246,
 'ABI': 247,
 'SAF': 248,
 'TYR': 249,
 'TXK': 250,
 'LCH': 251,
 'CYS': 252,
 'GRI': 253,
 'ISP': 254,
 'FLG': 255,
 'STX': 256,
 'FAI': 257,
 'YAK': 258,
 'KTN': 259,
 'SIT': 260,
 'BLI': 261,
 'JNU': 262,
 'ADK': 263,
 'CDV': 264,
 'PSE': 265,
 'DAB': 266,
 'MLB': 267,
 'ADQ': 268,
 'OME': 269,
 'BRW': 270,
 'BET': 271,
 'OTZ': 272,
 'PSG': 273,
 'WRG': 274,
 'SCC': 275,
 'GRK': 276,
 'RST': 277,
 'TOL': 278,
 'SUX': 279,
 'ACT': 280,
 'CLL': 281,
 'LAW': 282,
 'SPS': 283,
 'SJT': 284,
 'JLN': 285,
 'GGG': 286,
 'BJI': 287,
 'ABR': 288,
 'ALO': 289,
 'GCK': 290,
 'ACK': 291,
 'MVY': 292,
 'WYS': 293,
 'DLG': 294,
 'AKN': 295,
 'COU': 296,
 'BPT': 297,
 'DRT': 298,
 'GST': 299,
 'APN': 300,
 'INL': 301,
 'HIB': 302,
 'ESC': 303,
 'BRD': 304,
 'IMT': 305,
 'ISN': 306,
 'LAR': 307,
 'AZA': 308,
 'TTN': 309,
 'SHD': 310,
 'PLN': 311,
 'PBG': 312,
 'IAG': 313,
 'LBE': 314,
 'RHI': 315,
 'VEL': 316,
 'STC': 317,
 'DVL': 318,
 'JMS': 319,
 'PUB': 320,
 'CIU': 321,
 'DIK': 322,
 'HYS': 323,
 'CNY': 324,
 'ERI': 325,
 'PIB': 326,
 'SCE': 327,
 'UST': 328,
 'ILG': 329,
 'ORH': 330,
 'PPG': 331,
 'BGM': 332,
 'ITH': 333,
 'HYA': 334,
 'EFD': 335,
 'SPN': 336,
 'PGD': 337,
 'SFB': 338,
 'PIE': 339,
 'BLV': 340,
 'HGR': 341,
 'OWB': 342,
 'HTS': 343,
 'USA': 344,
 'LCK': 345,
 'OGD': 346,
 'PVU': 347,
 'YNG': 348,
 'SCK': 349,
 'SWO': 350,
 'HVN': 351,
 'STS': 352,
 'IFP': 353,
 'CKB': 354,
 'CGI': 355,
 'UIN': 356,
 'PSM': 357,
 'OGS': 358,
 'LYH': 359,
 'BFF': 360,
 'LBF': 361,
 'LBL': 362,
 'FLO': 363,
 'PGV': 364,
 'SLN': 365,
 'HHH': 366,
 'PRC': 367,
 'EAR': 368,
 'FOE': 369,
 'MCN': 370,
 'TEX': 371,
 'OXR': 372,
 'PFN': 373,
 'MWH': 374,
 'PIR': 375,
 'UTM': 376,
 'TUP': 377,
 'FNL': 378}

# User can optionally use a different model file to run the application
if len(sys.argv) > 1:
	modelname = sys.argv[1]
else:
	modelname = 'rf_model.joblib'

# Load the model
clf = load(modelname)

# Ask the user for inputs (Quits when inputs are invalid)
origin = input ("Enter the 3 character origin airport: ")

if origin not in airport_decode:
	print ("Invalid airport code: ")
	exit (origin)

dest = input ("Enter the 3 character destination airport: ")

if dest not in airport_decode:
	print ("Invalid airport code: ")
	exit (dest)

month = int(input ("Enter the month of departure (1-12): "))

if month < 1 or month > 12:
	print ("Invalid month values: ")
	exit (month)

depart = input ("Enter the scheduled departure time (24 hour HHMM format): ")

if len(depart) < 3 or int(depart) < 0 or int(depart) > 2400 or int(depart)%100 > 59:
	print ("Invalid time format: ")
	exit (depart)

arrival = input ("Enter the scheduled arrival time (24 hour HHMM format): ")

if len(arrival) < 3 or int(arrival) < 0 or int(arrival) > 2400 or int(arrival[-2:]) > 59:
	print ("Invalid time format: ")
	exit (arrival)

# Create the list of parameters for the model
trial = [int(depart), int(arrival), airport_decode[origin], airport_decode[dest], month]

# Call the prediction model
result = clf.predict([trial])

# Print the result
print (result)

